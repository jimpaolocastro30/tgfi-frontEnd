{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\castr\\\\Documents\\\\dddd\\\\17 starting next js\\\\frontend\\\\components\\\\auth\\\\ProfileUpdate.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\n\nconst ProfileUpdate = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    username: '',\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false,\n    loading: false,\n    photo: '',\n    userData: ''\n  });\n  const token = getCookie('token');\n  const {\n    username,\n    name,\n    email,\n    password,\n    error,\n    success,\n    loading,\n    photo,\n    userData\n  } = values;\n\n  const init = () => {\n    getProfile(token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          error: data.error\n        }));\n      } else {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          username: data.username,\n          name: data.name,\n          email: data.email,\n          about: data.about\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"image\"), __jsx(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"update form\", JSON.stringify({\n    username,\n    email,\n    name\n  })))));\n};\n\nexport default ProfileUpdate;","map":{"version":3,"sources":["C:/Users/castr/Documents/dddd/17 starting next js/frontend/components/auth/ProfileUpdate.js"],"names":["Link","useState","useEffect","Router","getCookie","isAuth","getProfile","update","ProfileUpdate","values","setValues","username","name","email","password","error","success","loading","photo","userData","token","init","then","data","about","JSON","stringify"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,oBAAnC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC;AACjCU,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,QAAQ,EAAE,EAJuB;AAKjCC,IAAAA,KAAK,EAAE,KAL0B;AAMjCC,IAAAA,OAAO,EAAE,KANwB;AAOjCC,IAAAA,OAAO,EAAE,KAPwB;AAQjCC,IAAAA,KAAK,EAAE,EAR0B;AASjCC,IAAAA,QAAQ,EAAE;AATuB,GAAD,CAApC;AAYA,QAAMC,KAAK,GAAGhB,SAAS,CAAC,OAAD,CAAvB;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA,OAA1C;AAAmDC,IAAAA,OAAnD;AAA4DC,IAAAA,KAA5D;AAAmEC,IAAAA;AAAnE,MAAgFV,MAAtF;;AAEA,QAAMY,IAAI,GAAG,MAAM;AACff,IAAAA,UAAU,CAACc,KAAD,CAAV,CAAkBE,IAAlB,CAAuBC,IAAI,IAAI;AAC3B,UAAIA,IAAI,CAACR,KAAT,EAAgB;AACZL,QAAAA,SAAS,iCAAMD,MAAN;AAAcM,UAAAA,KAAK,EAAEQ,IAAI,CAACR;AAA1B,WAAT;AACH,OAFD,MAEO;AACHL,QAAAA,SAAS,iCACFD,MADE;AAELE,UAAAA,QAAQ,EAAEY,IAAI,CAACZ,QAFV;AAGLC,UAAAA,IAAI,EAAEW,IAAI,CAACX,IAHN;AAILC,UAAAA,KAAK,EAAEU,IAAI,CAACV,KAJP;AAKLW,UAAAA,KAAK,EAAED,IAAI,CAACC;AALP,WAAT;AAOH;AACJ,KAZD;AAaH,GAdD;;AAgBAtB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEKI,IAAI,CAACC,SAAL,CAAe;AAAEf,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBD,IAAAA;AAAnB,GAAf,CAFL,CAFJ,CADJ,CADJ,CADJ;AAaH,CAjDD;;AAmDA,eAAeJ,aAAf","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { getProfile, update } from '../../actions/user';\n\nconst ProfileUpdate = () => {\n    const [values, setValues] = useState({\n        username: '',\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        success: false,\n        loading: false,\n        photo: '',\n        userData: ''\n    });\n\n    const token = getCookie('token');\n    const { username, name, email, password, error, success, loading, photo, userData } = values;\n\n    const init = () => {\n        getProfile(token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    username: data.username,\n                    name: data.name,\n                    email: data.email,\n                    about: data.about\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">image</div>\n                    <div className=\"col-md-8\">\n                        update form\n                        {JSON.stringify({ username, email, name })}\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileUpdate;\n"]},"metadata":{},"sourceType":"module"}